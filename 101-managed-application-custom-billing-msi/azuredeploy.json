{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the resources."
            }
        },
        "functionName": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "Unique name of the function app to be created."
            }
        },
        "dimensionConfig": {
            "type": "string",
            "defaultValue": "[[{\"dimension\":\"pounds\", \"quantity\":8}, {\"dimension\":\"kilos\", \"quantity\":4}]",
            "metadata": {
                "description": "The dimension and quantity config for the chron job to send billing metrics."
            }
        },
        "marketplaceUri": {
            "type": "string",
            "defaultValue": "https://marketplaceapi.microsoft.com/api/usageEvent?api-version=2018-08-31",
            "metadata": {
                "description": "The marketplace URI that the app calls to report usage."
            }
        },
        "tokenResource": {
            "type": "string",
            "defaultValue": "62d94f6c-d599-489b-a797-3e10e42fbe22",
            "metadata": {
                "description": "The resource against which the token for the marketplace is acquired as per https://docs.microsoft.com/en-us/azure/marketplace/partner-center-portal/pc-saas-registration."
            }
        },
        "applicationResourceRoleAssignment": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "resourceGroupRoleAssignment": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/ilahat/azure-quickstart-templates/master/101-managed-application-custom-billing-msi/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
        "resourceName": "[toLower(take(concat(parameters('functionName'),uniqueString(resourceGroup().id)),24))]",
        "storageAccountName": "[variables('resourceName')]",
        "appInsightsName": "[variables('resourceName')]",
        "managedApplicationId": "[resourceGroup().managedBy]",
        "managedApplicationName": "[last(split(variables('managedApplicationId'), '/'))]",
        "applicationResourceGroupName": "[split(variables('managedApplicationId'), '/')[4]]",
        "msiAccessRoleId": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS"
            }
        },        
        {
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('appInsightsName')]",
            "type": "microsoft.insights/components",
            "location": "[parameters('location')]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('appInsightsName'))]": "Resource"
            },
            "properties": {
                "ApplicationId": "[variables('appInsightsName')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('functionName')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]"
            ],
            "properties": {
                "name": "[parameters('functionName')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-02-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-02-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsSecretStorageType",
                            "value": "Files"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2018-02-01').keys[0].value)]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', variables('appInsightsName')), '2018-05-01-preview').InstrumentationKey]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[uri(parameters('_artifactsLocation'), concat('artifacts/functionzip/functionpackage.zip', parameters('_artifactsLocationSasToken')))]"
                        },
                        {
                            "name": "DIMENSION_CONFIG",
                            "value": "[parameters('dimensionConfig')]"
                        },
                        {
                            "name": "MARKETPLACEAPI_URI",
                            "value": "[parameters('marketplaceUri')]"
                        },
                        {
                            "name": "TOKEN_RESOURCE",
                            "value": "[parameters('tokenResource')]"
                        },
                        {
                            "name": "RESOURCEGROUP_ID",
                            "value": "[resourcegroup().id]"
                        }
                    ]
                },
                "clientAffinityEnabled": false,
                "reserved": false
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "roleAssignmentNestedTemplate2",
            "resourceGroup": "[variables('applicationResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2019-04-01-preview",
                            "name": "[parameters('resourceGroupRoleAssignment')]",
                            "properties": {
                                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', variables('msiAccessRoleId'))]",
                                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionName')), '2018-11-01', 'Full').identity.principalId]",
                                "delegatedManagedIdentityResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionName'))]",
                                "scope": "[resourceGroup().id]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('functionName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "name": "roleAssignmentNestedTemplate2",
            "resourceGroup": "[variables('applicationResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Solutions/applications/providers/roleAssignments",
                            "apiVersion": "2019-04-01-preview",
                            "name": "[concat(variables('managedApplicationName'), '/Microsoft.Authorization/', parameters('applicationResourceRoleAssignment'))]",
                            "properties": {
                                "roleDefinitionId": "[concat(subscription().id, '/providers/Microsoft.Authorization/roleDefinitions/', variables('msiAccessRoleId'))]",
                                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionName')), '2018-11-01', 'Full').identity.principalId]",
                                "delegatedManagedIdentityResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('functionName'))]",
                                "scope": "[variables('managedApplicationId')]",
                                "principalType": "ServicePrincipal"
                            }
                        }
                    ]
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('functionName'))]"
            ]
        }
    ],
    "outputs": {
        "identityApplicationId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName')), '2018-11-30').clientId]"
        },
        "identityPrincipalId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('identityName')), '2018-11-30').principalId]"
        },
        "tenantId": {
            "type": "string",
            "value": "[subscription().tenantId]"
        },
        "webhookEndpoint": {
            "type": "string",
            "value": "[replace(listSecrets(resourceId('Microsoft.Web/sites/functions', parameters('functionName'), 'Webhook'), '2019-08-01').trigger_url, '/Webhook?', concat('?sig=',parameters('urlSignature'),'&'))]"
        }
    }
}